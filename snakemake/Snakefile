if config['method'] == 'seed':
    include: 'mirzag_seed.snakefile'
elif config['method'] == 'scan':
    include: 'mirzag_scan.snakefile'
else:
    raise RuntimeError('Unknown method: {}'.format(config['method']))

rule all:
    input:
        config['output_file_name']

rule split_mirnas:
    output:
        dynamic('results/split_mirnas/{part}.mirna.fa')
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/split_mirnas.log"
    shell:
        "(rg_prepare_mirnas_for_mirza_and_split.py --input {config[input_mirna]} \
        --output-dir results/split_mirnas/) &> {log}"

rule calculate_mirza:
    input:
        seedcount = 'results/coords/{part}.seedcount',
        script = os.path.join(config["scripts"], "rg_calculate_MIRZA.py")
    output:
        'results/mirza/{part}.mirza'
    params:
        organism = config["organism"]
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/calculate_mirza_{part}.log"
    shell:
        "(python {input.script} \
        --seq {config[input_mrna]} \
        --motifs {config[input_mirna]} \
        --coords {input.seedcount} \
        --tree {config[input_tree]} \
        --msa {config[input_multiple_alignments]} \
        --threshold {config[settings_mirza_threshold]} \
        --mirzabin MIRZA \
        --reforg {params.organism} \
        --out {output}) &> {log}"

rule calculate_contrafold:
    input:
        'results/coords/{part}.seedcount'
    output:
        'results/contrafold/{part}.contrafold'
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/calculate_contrafold_{part}.log"
    shell:
        "(rg_calculate_contrafold.py \
        --seq {config[input_mrna]} \
        --coords {input} \
        --contextLen_L {config[settings_contextLen_L]} \
        --out {output}) &> {log}"

rule calculate_flanks:
    input:
        'results/coords/{part}.seedcount'
    output:
        'results/flanks/{part}.flanks'
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/calculate_flanks_{part}.log"
    shell:
        "(rg_calculate_flanks_composition.py \
        --seq {config[input_mrna]} \
        --coords {input} \
        --out {output}) &> {log}"

rule calculate_distance:
    input:
        'results/coords/{part}.seedcount'
    output:
        'results/distance/{part}.distance'
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/calculate_distance_{part}.log"
    shell:
        "(rg_calculate_distance.py \
        --seq {config[input_mrna]} \
        --coords {input} \
        --out {output}) &> {log}"


rule merge_results_add_probability_and_calculate_per_gene_score:
    input:
        coords = 'results/coords/{part}.seedcount',
        mirza = 'results/mirza/{part}.mirza',
        contrafold = 'results/contrafold/{part}.contrafold',
        flanks = 'results/flanks/{part}.flanks',
        distance = 'results/distance/{part}.distance'
    output:
        'results/score/{part}.score'
    singularity:
        'docker://zavolab/mirzag-scripts:1'
    log:
        "results/local_log/merge_results_add_probability_and_calculate_per_gene_score_{part}.log"
    shell:
        "(rg_merge_results_add_probability_and_calculate_per_gene_score.py \
        --coords {input.coords} \
        --mirza {input.mirza} \
        --contrafold {input.contrafold} \
        --flanks {input.flanks} \
        --distance {input.distance} \
        --model-bls {config[input_model_with_bls]} \
        --model-nobls {config[input_model_without_bls]} \
        --split-by {config[settings_split_by]} \
        --column {config[settings_index_after_split]} \
        --only-mirza no \
        --output {output}) &> {log}"

rule concatenated_scores:
    input:
        dynamic('results/score/{part}.score')
    output:
        config['output_file_name']
    log:
        "results/local_log/concatenated_scores.log"
    shell:
        '(cat {input} > {output}) &> {log}'
